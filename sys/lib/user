DerpyOS_User_LoggedInUser = ""

function DerpyOS_User_AddUser(username, password)
  if not fs.exists("/user/" .. username) then
    fs.makeDir("/user/" .. username)
    fs.makeDir("/user/" .. username .. "/config")
    handle = fs.open("/user/" .. username .. "/config/pass", "w")
    handle.write(DerpyOS_User_PasswordHash(password))
    handle.close()
    return "DerpyOS_User_AddedOK"
  else
    return "DerpyOS_User_AlreadyExists"
  end
end

function DerpyOS_User_ListUsers()
  return fs.list("/user")
end

function DerpyOS_User_RemoveUser(username)
  if fs.exists("/user/" .. username) then
    fs.delete("/user/" .. username)  
    return "DerpyOS_User_Removed"
  else
    return "DerpyOS_User_UserDoesNotExist"
  end
end

function DerpyOS_User_GetUserName()
  return DerpyOS_User_LoggedInUser
end

function DerpyOS_User_GetUserProfileDir()
  return "/user/" .. DerpyOS_User_GetUserName() .. "/"
end

function DerpyOS_User_DoLogin(username)
  DerpyOS_User_LoggedInUser = username
end

function DerpyOS_User_LoginScreen()
while true do
  print(" ")
  term.write(DerpyOS_System_GetName() .. " login: ")
  username = io.read()
  term.write("Password: ")
  password = read("*")
  if fs.exists("/user/"..username) then
    password = DerpyOS_User_PasswordHash(password)
    handle = fs.open("/user/"..username.."/config/pass", "r")
    line = handle.readLine()
    if password == line then
      DerpyOS_User_DoLogin(username)
      DerpyOS_Shell_Main()
    else
      sleep(2)
      print("Login incorrect.")
    end
  else
    sleep(2)
    print("Login incorrect.")
  end
end
end

local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'

function DerpyOS_User_PasswordHash(data)
    return ((data:gsub('.', function(x)
        local r,b='',x:byte()
        for i=8,1,-1 do r=r..(b%2^i-b%2^(i-1)>0 and '1' or '0') end
        return r;
    end)..'0000'):gsub('%d%d%d?%d?%d?%d?', function(x)
        if (#x < 6) then return '' end
        local c=0
        for i=1,6 do c=c+(x:sub(i,i)=='1' and 2^(6-i) or 0) end
        return b:sub(c+1,c+1)
    end)..({ '', '==', '=' })[#data%3+1])
end
